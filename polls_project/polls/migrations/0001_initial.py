# Generated by Django 2.2.17 on 2020-12-27 20:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512, verbose_name='Название опроса')),
                ('description', models.TextField(verbose_name='Описание опроса')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата начала опроса')),
                ('stopped_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения опроса')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='polls', to=settings.AUTH_USER_MODEL, verbose_name='Автор опроса')),
            ],
            options={
                'db_table': 'polls',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст вопроса')),
                ('question_type', models.IntegerField(choices=[(0, 'Вопрос с текстовым ответ'), (1, 'Вопрос с одним вариантом ответа'), (2, 'Вопрос с несколькими вариантами ответов')], verbose_name='Тип вопроса: 0 - текстовый 1 - с одним вариантом ответа 2 - с несколькими вариантами ответов')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='polls.Poll', verbose_name='Опрос')),
            ],
            options={
                'db_table': 'questions',
            },
        ),
        migrations.CreateModel(
            name='PassedPoll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passed_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата прохождения')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passed_polls', to='polls.Poll', verbose_name='Опрос')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='passed_polls', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь, прошедший опрос')),
            ],
            options={
                'db_table': 'passed_polls',
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=512, verbose_name='Вариант ответа')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='polls.Question', verbose_name='Вопрос')),
            ],
            options={
                'db_table': 'choices',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=512, null=True, verbose_name='Текст ответа')),
                ('choices', models.ManyToManyField(related_name='answers', to='polls.Choice', verbose_name='Варианты ответа')),
                ('passed_poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='polls.PassedPoll', verbose_name='Пройденный опрос')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='polls.Question', verbose_name='Вопрос')),
            ],
            options={
                'db_table': 'answers',
            },
        ),
    ]
